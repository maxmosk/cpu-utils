
Log start  in file                 src/code/stack.c, function                       stackAlloc, line    159
Alloc pointer 0x618000000080 size 100
 of elem_tLog finish in file                 src/code/stack.c, function                       stackAlloc, line    161

Log start  in file                 src/code/stack.c, function                       stackAlloc, line    159
Alloc pointer 0x618000000480 size 100
 of elem_tLog finish in file                 src/code/stack.c, function                       stackAlloc, line    161

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                       stackDtor_, line    187
stack_t [0x7ffe35aca4a0] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 0
    headHash        = d86040cf (calculated: d86040cf)
    dataHash        = fd9550f7 (calculated: fd9550f7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000088
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                        stackFree, line    271
Free pointer 0x618000000088
Log finish in file                 src/code/stack.c, function                        stackFree, line    273

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                       stackDtor_, line    187
stack_t [0x7ffe35aca4f8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 0
    headHash        = 8a415a63 (calculated: 8a415a63)
    dataHash        = fd9550f7 (calculated: fd9550f7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                        stackFree, line    271
Free pointer 0x618000000488
Log finish in file                 src/code/stack.c, function                        stackFree, line    273

Log start  in file                 src/code/stack.c, function                       stackAlloc, line    159
Alloc pointer 0x618000000080 size 100
 of elem_tLog finish in file                 src/code/stack.c, function                       stackAlloc, line    161

Log start  in file                 src/code/stack.c, function                       stackAlloc, line    159
Alloc pointer 0x618000000480 size 100
 of elem_tLog finish in file                 src/code/stack.c, function                       stackAlloc, line    161

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 0
    headHash        = aca6f37f (calculated: aca6f37f)
    dataHash        = fd9550f7 (calculated: fd9550f7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000088
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 0
    headHash        = 8990ba52 (calculated: 8990ba52)
    dataHash        = fd9550f7 (calculated: fd9550f7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 1
    headHash        = 675a2e00 (calculated: 675a2e00)
    dataHash        = 2472e5dc (calculated: 2472e5dc)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000088
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                     stackRealloc, line    212
Realloc pointer 0x618000000080 size 100 of elem_t to pointer 0x614000000040 size 50
 of elem_tLog finish in file                 src/code/stack.c, function                     stackRealloc, line    215

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 50
    size            = 0
    headHash        = 98028b15 (calculated: 98028b15)
    dataHash        = c0a9b97 (calculated: c0a9b97)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x614000000048
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 50
    size            = 1
    headHash        = 4f6bb817 (calculated: 4f6bb817)
    dataHash        = 80d9f58 (calculated: 80d9f58)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x614000000048
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 50
    size            = 2
    headHash        = 886e647c (calculated: 886e647c)
    dataHash        = 1b708bd (calculated: 1b708bd)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x614000000048
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 50
    size            = 3
    headHash        = 1f280b95 (calculated: 1f280b95)
    dataHash        = c574d577 (calculated: c574d577)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x614000000048
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
      * [        2 ] = 1
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                     stackRealloc, line    212
Realloc pointer 0x614000000040 size 50 of elem_t to pointer 0x611000000040 size 25
 of elem_tLog finish in file                 src/code/stack.c, function                     stackRealloc, line    215

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 25
    size            = 2
    headHash        = e3a4c322 (calculated: e3a4c322)
    dataHash        = c210d6 (calculated: c210d6)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x611000000048
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                     stackRealloc, line    212
Realloc pointer 0x611000000040 size 25 of elem_t to pointer 0x60b0000000f0 size 12
 of elem_tLog finish in file                 src/code/stack.c, function                     stackRealloc, line    215

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 0
    headHash        = eba91605 (calculated: eba91605)
    dataHash        = a48b9043 (calculated: a48b9043)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = b2431bca (calculated: b2431bca)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 55d5aa5b (calculated: 55d5aa5b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
      * [        2 ] = 1
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = b2431bca (calculated: b2431bca)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 1
    headHash        = 6fd76b9 (calculated: 6fd76b9)
    dataHash        = b1b48e50 (calculated: b1b48e50)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 1d68312f (calculated: 1d68312f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = b9afcca8 (calculated: b9afcca8)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
      * [        3 ] = 1
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 1d68312f (calculated: 1d68312f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 1d68312f (calculated: 1d68312f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = b9afcca8 (calculated: b9afcca8)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
      * [        3 ] = 1
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 1d68312f (calculated: 1d68312f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 2
    headHash        = 6d260aa4 (calculated: 6d260aa4)
    dataHash        = 163cd2ac (calculated: 163cd2ac)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = a5fcd74b (calculated: a5fcd74b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = e927da16 (calculated: e927da16)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
      * [        4 ] = 1
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = a5fcd74b (calculated: a5fcd74b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = a5fcd74b (calculated: a5fcd74b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = e927da16 (calculated: e927da16)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
      * [        4 ] = 1
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = a5fcd74b (calculated: a5fcd74b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 3
    headHash        = 31e42dad (calculated: 31e42dad)
    dataHash        = b23910 (calculated: b23910)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
      * [        2 ] = 5.43472e-323
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = ec5229b7 (calculated: ec5229b7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 56f4470 (calculated: 56f4470)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
      * [        5 ] = 1
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = ec5229b7 (calculated: ec5229b7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = ec5229b7 (calculated: ec5229b7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 56f4470 (calculated: 56f4470)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
      * [        5 ] = 1
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = ec5229b7 (calculated: ec5229b7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 4
    headHash        = 6aa93367 (calculated: 6aa93367)
    dataHash        = 828dee47 (calculated: 828dee47)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
      * [        2 ] = 5.43472e-323
      * [        3 ] = 5.43472e-323
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 374c408b (calculated: 374c408b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 7
    headHash        = 7a255c4c (calculated: 7a255c4c)
    dataHash        = 5f40e2a3 (calculated: 5f40e2a3)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
      * [        6 ] = 1
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 374c408b (calculated: 374c408b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 374c408b (calculated: 374c408b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 7
    headHash        = 7a255c4c (calculated: 7a255c4c)
    dataHash        = 5f40e2a3 (calculated: 5f40e2a3)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
      * [        6 ] = 1
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 374c408b (calculated: 374c408b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 5
    headHash        = 5a3de294 (calculated: 5a3de294)
    dataHash        = 95223850 (calculated: 95223850)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
      * [        2 ] = 5.43472e-323
      * [        3 ] = 5.43472e-323
      * [        4 ] = 5.43472e-323
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 89114b50 (calculated: 89114b50)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 89114b50 (calculated: 89114b50)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 7
    headHash        = 7a255c4c (calculated: 7a255c4c)
    dataHash        = 25e166dc (calculated: 25e166dc)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
      * [        6 ] = 1
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 8
    headHash        = 68b806eb (calculated: 68b806eb)
    dataHash        = 51ccca12 (calculated: 51ccca12)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
      * [        6 ] = 1
      * [        7 ] = 1
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 7
    headHash        = 7a255c4c (calculated: 7a255c4c)
    dataHash        = 25e166dc (calculated: 25e166dc)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
      * [        6 ] = 1
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 89114b50 (calculated: 89114b50)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 100
    size            = 6
    headHash        = 34c0f0dc (calculated: 34c0f0dc)
    dataHash        = 30b008b7 (calculated: 30b008b7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x618000000488
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
      * [        2 ] = 5.43472e-323
      * [        3 ] = 5.43472e-323
      * [        4 ] = 5.43472e-323
      * [        5 ] = 5.43472e-323
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
        [       50 ] = nan (POISON)
        [       51 ] = nan (POISON)
        [       52 ] = nan (POISON)
        [       53 ] = nan (POISON)
        [       54 ] = nan (POISON)
        [       55 ] = nan (POISON)
        [       56 ] = nan (POISON)
        [       57 ] = nan (POISON)
        [       58 ] = nan (POISON)
        [       59 ] = nan (POISON)
        [       60 ] = nan (POISON)
        [       61 ] = nan (POISON)
        [       62 ] = nan (POISON)
        [       63 ] = nan (POISON)
        [       64 ] = nan (POISON)
        [       65 ] = nan (POISON)
        [       66 ] = nan (POISON)
        [       67 ] = nan (POISON)
        [       68 ] = nan (POISON)
        [       69 ] = nan (POISON)
        [       70 ] = nan (POISON)
        [       71 ] = nan (POISON)
        [       72 ] = nan (POISON)
        [       73 ] = nan (POISON)
        [       74 ] = nan (POISON)
        [       75 ] = nan (POISON)
        [       76 ] = nan (POISON)
        [       77 ] = nan (POISON)
        [       78 ] = nan (POISON)
        [       79 ] = nan (POISON)
        [       80 ] = nan (POISON)
        [       81 ] = nan (POISON)
        [       82 ] = nan (POISON)
        [       83 ] = nan (POISON)
        [       84 ] = nan (POISON)
        [       85 ] = nan (POISON)
        [       86 ] = nan (POISON)
        [       87 ] = nan (POISON)
        [       88 ] = nan (POISON)
        [       89 ] = nan (POISON)
        [       90 ] = nan (POISON)
        [       91 ] = nan (POISON)
        [       92 ] = nan (POISON)
        [       93 ] = nan (POISON)
        [       94 ] = nan (POISON)
        [       95 ] = nan (POISON)
        [       96 ] = nan (POISON)
        [       97 ] = nan (POISON)
        [       98 ] = nan (POISON)
        [       99 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                     stackRealloc, line    212
Realloc pointer 0x618000000480 size 100 of elem_t to pointer 0x614000000240 size 50
 of elem_tLog finish in file                 src/code/stack.c, function                     stackRealloc, line    215

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 7
    headHash        = 7a255c4c (calculated: 7a255c4c)
    dataHash        = 25e166dc (calculated: 25e166dc)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
      * [        6 ] = 1
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 89114b50 (calculated: 89114b50)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 1
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 374c408b (calculated: 374c408b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 7
    headHash        = 7a255c4c (calculated: 7a255c4c)
    dataHash        = 5f40e2a3 (calculated: 5f40e2a3)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
      * [        6 ] = 1
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 374c408b (calculated: 374c408b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 50
    size            = 5
    headHash        = 92baefc1 (calculated: 92baefc1)
    dataHash        = 9e954d96 (calculated: 9e954d96)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x614000000248
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
      * [        2 ] = 5.43472e-323
      * [        3 ] = 5.43472e-323
      * [        4 ] = 5.43472e-323
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
        [       25 ] = nan (POISON)
        [       26 ] = nan (POISON)
        [       27 ] = nan (POISON)
        [       28 ] = nan (POISON)
        [       29 ] = nan (POISON)
        [       30 ] = nan (POISON)
        [       31 ] = nan (POISON)
        [       32 ] = nan (POISON)
        [       33 ] = nan (POISON)
        [       34 ] = nan (POISON)
        [       35 ] = nan (POISON)
        [       36 ] = nan (POISON)
        [       37 ] = nan (POISON)
        [       38 ] = nan (POISON)
        [       39 ] = nan (POISON)
        [       40 ] = nan (POISON)
        [       41 ] = nan (POISON)
        [       42 ] = nan (POISON)
        [       43 ] = nan (POISON)
        [       44 ] = nan (POISON)
        [       45 ] = nan (POISON)
        [       46 ] = nan (POISON)
        [       47 ] = nan (POISON)
        [       48 ] = nan (POISON)
        [       49 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                     stackRealloc, line    212
Realloc pointer 0x614000000240 size 50 of elem_t to pointer 0x611000000180 size 25
 of elem_tLog finish in file                 src/code/stack.c, function                     stackRealloc, line    215

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 374c408b (calculated: 374c408b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = db93051f (calculated: db93051f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 2
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = ec5229b7 (calculated: ec5229b7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 6
    headHash        = c4472b39 (calculated: c4472b39)
    dataHash        = 9836a8c0 (calculated: 9836a8c0)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
      * [        5 ] = 2
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = ec5229b7 (calculated: ec5229b7)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 3
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 25
    size            = 4
    headHash        = 231b53e0 (calculated: 231b53e0)
    dataHash        = 938bf1b3 (calculated: 938bf1b3)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x611000000188
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
      * [        2 ] = 5.43472e-323
      * [        3 ] = 5.43472e-323
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
        [       12 ] = nan (POISON)
        [       13 ] = nan (POISON)
        [       14 ] = nan (POISON)
        [       15 ] = nan (POISON)
        [       16 ] = nan (POISON)
        [       17 ] = nan (POISON)
        [       18 ] = nan (POISON)
        [       19 ] = nan (POISON)
        [       20 ] = nan (POISON)
        [       21 ] = nan (POISON)
        [       22 ] = nan (POISON)
        [       23 ] = nan (POISON)
        [       24 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                     stackRealloc, line    212
Realloc pointer 0x611000000180 size 25 of elem_t to pointer 0x60b0000001a0 size 12
 of elem_tLog finish in file                 src/code/stack.c, function                     stackRealloc, line    215

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = 79c3c8c3 (calculated: 79c3c8c3)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
      * [        4 ] = 6
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = 252a776f (calculated: 252a776f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 3
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = a5fcd74b (calculated: a5fcd74b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 5
    headHash        = 1d3b1392 (calculated: 1d3b1392)
    dataHash        = ceaf5b6c (calculated: ceaf5b6c)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
      * [        4 ] = 6
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = a5fcd74b (calculated: a5fcd74b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 4
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = 640a5fbb (calculated: 640a5fbb)
    dataHash        = 489cf091 (calculated: 489cf091)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000001a8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
      * [        2 ] = 5.43472e-323
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = a2324d2c (calculated: a2324d2c)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
      * [        3 ] = 24
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 7e91e72b (calculated: 7e91e72b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 4
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 1d68312f (calculated: 1d68312f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 4
    headHash        = f6c3c91d (calculated: f6c3c91d)
    dataHash        = f98bc1af (calculated: f98bc1af)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
      * [        3 ] = 24
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 1d68312f (calculated: 1d68312f)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 5
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = 3fe6fcc (calculated: 3fe6fcc)
    dataHash        = 1859ddd9 (calculated: 1859ddd9)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000001a8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
      * [        1 ] = 5.43472e-323
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = f9458a3e (calculated: f9458a3e)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
      * [        2 ] = 120
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 7ea50689 (calculated: 7ea50689)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 5
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 0
    headHash        = eba91605 (calculated: eba91605)
    dataHash        = a48b9043 (calculated: a48b9043)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = b2431bca (calculated: b2431bca)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 3
    headHash        = c0cf2cfa (calculated: c0cf2cfa)
    dataHash        = 296e7cff (calculated: 296e7cff)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
      * [        2 ] = 120
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = b2431bca (calculated: b2431bca)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 6
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                        stackPush, line     95
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = e1321a42 (calculated: e1321a42)
    dataHash        = b604a6f9 (calculated: b604a6f9)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000001a8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 4.94066e-324
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 2
    headHash        = d60896be (calculated: d60896be)
    dataHash        = 1620389b (calculated: 1620389b)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
      * [        1 ] = 720
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                         stackPop, line    125
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 1
    headHash        = 16fe903d (calculated: 16fe903d)
    dataHash        = da744857 (calculated: da744857)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
      * [        0 ] = 6
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                       stackDtor_, line    187
stack_t [0x7fff6674fa60] aka (cpu->stack) from file src/code/cpu.c function cpuCtor line 36
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 0
    headHash        = eba91605 (calculated: eba91605)
    dataHash        = a48b9043 (calculated: a48b9043)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000000f8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                        stackFree, line    271
Free pointer 0x60b0000000f8
Log finish in file                 src/code/stack.c, function                        stackFree, line    273

Log start  in file                src/code/verify.c, function                      stackVerify, line     37
Verificator:  file                 src/code/stack.c, function                       stackDtor_, line    187
stack_t [0x7fff6674fab8] aka (cpu->callstack) from file src/code/cpu.c function cpuCtor line 37
{
    leftCanary      = 919AE132F07DED32
    rightCanary     = 919AE132F07DED32
    capacity        = 12
    size            = 0
    headHash        = 5139f78 (calculated: 5139f78)
    dataHash        = a48b9043 (calculated: a48b9043)
    status          = 0
    {
        Destructed                               NO
        Underflow                                NO
        Overflow                                 NO
    }
    data            = 0x60b0000001a8
    leftDataCanary  = 919AE132F07DED32
    rightDataCanary = 919AE132F07DED32
    {
        [        0 ] = nan (POISON)
        [        1 ] = nan (POISON)
        [        2 ] = nan (POISON)
        [        3 ] = nan (POISON)
        [        4 ] = nan (POISON)
        [        5 ] = nan (POISON)
        [        6 ] = nan (POISON)
        [        7 ] = nan (POISON)
        [        8 ] = nan (POISON)
        [        9 ] = nan (POISON)
        [       10 ] = nan (POISON)
        [       11 ] = nan (POISON)
    }
}
Log finish in file                src/code/verify.c, function                      stackVerify, line    104

Log start  in file                 src/code/stack.c, function                        stackFree, line    271
Free pointer 0x60b0000001a8
Log finish in file                 src/code/stack.c, function                        stackFree, line    273
